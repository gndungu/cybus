# Generated by Django 4.2.22 on 2025-10-05 01:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('conf', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('identified_date', models.DateField(default=django.utils.timezone.now)),
                ('benefit', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('feasibility', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='open', help_text='e.g. open, implemented, closed', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('identified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='identified_opportunities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('tin_number', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('ACTIVE', 'ACTIVE')], default='PENDING', max_length=120)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('evaluation_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='conf.evaluationlevel')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='conf.region')),
                ('representative', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisation_representative', to=settings.AUTH_USER_MODEL)),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='conf.sector')),
            ],
            options={
                'verbose_name_plural': 'Organisation',
                'db_table': 'Organisation',
            },
        ),
        migrations.CreateModel(
            name='QualityPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='Quality Policy', max_length=255)),
                ('content', models.TextField(help_text='The actual text of the quality policy')),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_policies', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('developed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='developed_policies', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('identified_date', models.DateField(default=django.utils.timezone.now)),
                ('likelihood', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('impact', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='open', help_text='e.g. open, mitigated, closed', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('identified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='identified_risks', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('employee', 'Employee'), ('shareholder', 'Shareholder'), ('community', 'Community'), ('regulator', 'Regulatory Body'), ('partner', 'Partner'), ('other', 'Other')], max_length=50)),
                ('contact_person', models.CharField(blank=True, max_length=150, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=255, null=True)),
                ('relevance_to_qms', models.TextField(help_text='Describe why this stakeholder is important to the QMS.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_role', to='system.organisation')),
            ],
            options={
                'verbose_name': 'Stakeholder',
                'verbose_name_plural': 'Stakeholders',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SWOTEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('swot_type', models.CharField(choices=[('strength', 'Strength'), ('weakness', 'Weakness'), ('opportunity', 'Opportunity'), ('threat', 'Threat')], max_length=20)),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swot_entries', to='system.organisation')),
            ],
            options={
                'verbose_name': 'SWOT Entry',
                'verbose_name_plural': 'SWOT Entries',
                'ordering': ['swot_type', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='StakeholderRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requirement', models.TextField(help_text='Describe the stakeholderâ€™s requirement or expectation.')),
                ('compliance_method', models.TextField(blank=True, help_text='How the organization ensures compliance with this requirement.', null=True)),
                ('monitoring_method', models.TextField(blank=True, help_text='How the organization monitors or reviews this requirement.', null=True)),
                ('last_review_date', models.DateField(blank=True, null=True)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('under_review', 'Under Review'), ('closed', 'Closed')], default='active', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stakeholder_requirements_responsible', to=settings.AUTH_USER_MODEL)),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='system.stakeholder')),
            ],
            options={
                'verbose_name': 'Stakeholder Requirement',
                'verbose_name_plural': 'Stakeholder Requirements',
                'ordering': ['stakeholder', 'status'],
            },
        ),
        migrations.CreateModel(
            name='ScopeStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scope_statement', to='system.organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('purpose', models.TextField(blank=True, help_text='Brief purpose or summary of this role.', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='conf.department')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='system.role')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['department', 'title'],
                'unique_together': {('title', 'department')},
            },
        ),
        migrations.CreateModel(
            name='RiskOpportunityResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_type', models.CharField(choices=[('mitigate', 'Mitigate'), ('accept', 'Accept'), ('transfer', 'Transfer'), ('avoid', 'Avoid'), ('exploit', 'Exploit'), ('enhance', 'Enhance'), ('share', 'Share')], max_length=50)),
                ('description', models.TextField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='open', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='system.opportunity')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risk_opportunity_responses', to=settings.AUTH_USER_MODEL)),
                ('risk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='system.risk')),
            ],
        ),
        migrations.CreateModel(
            name='QualityPolicyEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text="Description of the evidence, e.g. 'Photo of policy on notice board'", max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='qms/quality_policy/evidence/%Y/%m/%d/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='system.qualitypolicy')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QualityPolicyCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(help_text="e.g. 'Email', 'Training', 'Notice Board', 'Intranet'", max_length=150)),
                ('audience', models.TextField(blank=True, help_text='Who received the policy communication')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='qms/quality_policy/communications/%Y/%m/%d/')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='system.qualitypolicy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QMSChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Describe the nature and reason for the change.')),
                ('department', models.CharField(blank=True, max_length=150, null=True)),
                ('planned_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('implemented', 'Implemented'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='planned', max_length=20)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('implemented_date', models.DateField(blank=True, null=True)),
                ('impact_assessment', models.TextField(blank=True, help_text='Describe potential impacts of the change on QMS processes.', null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qms_changes_approved', to=settings.AUTH_USER_MODEL)),
                ('implemented_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qms_changes_implemented', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qms_changes_requested', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QMS Change',
                'verbose_name_plural': 'QMS Changes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PESTLEEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pestle_type', models.CharField(choices=[('political', 'Political'), ('economic', 'Economic'), ('social', 'Social'), ('technological', 'Technological'), ('legal', 'Legal'), ('environmental', 'Environmental')], max_length=20)),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pestle_entries', to='system.organisation')),
            ],
            options={
                'verbose_name': 'PESTLE Entry',
                'verbose_name_plural': 'PESTLE Entries',
                'ordering': ['pestle_type', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Organization Chart', max_length=150)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('date_issued', models.DateField()),
                ('file', models.FileField(upload_to='qms/org_charts/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization Chart',
                'verbose_name_plural': 'Organization Charts',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='OrganisationLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='conf.district')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='conf.region')),
            ],
            options={
                'verbose_name_plural': 'Organisation Location',
                'db_table': 'organisation_location',
            },
        ),
        migrations.CreateModel(
            name='OrganisationDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_coordinator', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='conf.department')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'verbose_name_plural': 'Departments',
                'db_table': 'department',
            },
        ),
        migrations.AddField(
            model_name='opportunity',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation'),
        ),
        migrations.CreateModel(
            name='LeadershipCommitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('commitment_type', models.CharField(choices=[('policy', 'Policy'), ('statement', 'Statement'), ('plan', 'Plan'), ('other', 'Other')], default='statement', max_length=30)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('resources', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('related_documents', models.TextField(blank=True, help_text='URLs or internal refs to related documents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='commitments', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'ordering': ['-effective_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsibilities', models.TextField(help_text='List the key responsibilities of this role.')),
                ('authorities', models.TextField(blank=True, help_text='Describe decision-making authorities.', null=True)),
                ('competencies', models.TextField(blank=True, help_text='Required skills, qualifications, or experience.', null=True)),
                ('effective_date', models.DateField()),
                ('last_review_date', models.DateField(blank=True, null=True)),
                ('document_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='qms/job_descriptions/')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jds_approved', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jds_reviewed', to=settings.AUTH_USER_MODEL)),
                ('role', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_description', to='system.role')),
            ],
            options={
                'verbose_name': 'Job Description',
                'verbose_name_plural': 'Job Descriptions',
                'ordering': ['role'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='qms/document/')),
                ('url', models.URLField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('organisation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_document', to='system.organisation')),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(help_text="e.g. 'Townhall', 'Email', 'Training', 'Poster'", max_length=150)),
                ('audience', models.TextField(blank=True, help_text='Who received the communication')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('materials', models.TextField(blank=True, help_text='links or references to presentation, minutes, handouts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='system.leadershipcommitment')),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(default=django.utils.timezone.now)),
                ('findings', models.TextField(blank=True)),
                ('conclusions', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='system.leadershipcommitment')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='CommitmentObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('metric', models.CharField(blank=True, help_text="e.g. 'Customer complaints per month'", max_length=150)),
                ('baseline', models.CharField(blank=True, max_length=100)),
                ('target', models.CharField(blank=True, max_length=100)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='system.leadershipcommitment')),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='qms/commitments/%Y/%m/%d/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='system.leadershipcommitment')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('done', 'Done'), ('blocked', 'Blocked')], default='open', max_length=30)),
                ('progress_notes', models.TextField(blank=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='system.leadershipcommitment')),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='system.commitmentobjective')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChangeControlRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_action', models.CharField(help_text='Describe the control or action taken.', max_length=255)),
                ('control_date', models.DateField()),
                ('verification', models.TextField(blank=True, help_text='Describe verification or validation of the change.', null=True)),
                ('document_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('evidence', models.FileField(blank=True, null=True, upload_to='qms/change_evidence/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('change', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_records', to='system.qmschange')),
                ('responsible_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='change_controls_responsible', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Change Control Record',
                'verbose_name_plural': 'Change Control Records',
                'ordering': ['-control_date'],
            },
        ),
        migrations.CreateModel(
            name='OrganisationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organisation', 'user')},
            },
        ),
        migrations.CreateModel(
            name='AccountabilityAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, help_text="Role or responsibility title e.g. 'QMS Sponsor', 'Process Owner'", max_length=150)),
                ('responsibility_description', models.TextField(blank=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accountabilities', to='system.leadershipcommitment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_accountabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('commitment', 'user', 'role')},
            },
        ),
    ]
