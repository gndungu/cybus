# Generated by Django 5.2.4 on 2025-09-30 04:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('system', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeadershipCommitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('commitment_type', models.CharField(choices=[('policy', 'Policy'), ('statement', 'Statement'), ('plan', 'Plan'), ('other', 'Other')], default='statement', max_length=30)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('resources', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('related_documents', models.TextField(blank=True, help_text='URLs or internal refs to related documents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='commitments', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'ordering': ['-effective_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(help_text="e.g. 'Townhall', 'Email', 'Training', 'Poster'", max_length=150)),
                ('audience', models.TextField(blank=True, help_text='Who received the communication')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('materials', models.TextField(blank=True, help_text='links or references to presentation, minutes, handouts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='system.leadershipcommitment')),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(default=django.utils.timezone.now)),
                ('findings', models.TextField(blank=True)),
                ('conclusions', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_reviews', to=settings.AUTH_USER_MODEL)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='system.leadershipcommitment')),
            ],
            options={
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='CommitmentObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('metric', models.CharField(blank=True, help_text="e.g. 'Customer complaints per month'", max_length=150)),
                ('baseline', models.CharField(blank=True, max_length=100)),
                ('target', models.CharField(blank=True, max_length=100)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='system.leadershipcommitment')),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='qms/commitments/%Y/%m/%d/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='system.leadershipcommitment')),
            ],
        ),
        migrations.CreateModel(
            name='CommitmentAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('done', 'Done'), ('blocked', 'Blocked')], default='open', max_length=30)),
                ('progress_notes', models.TextField(blank=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_actions', to=settings.AUTH_USER_MODEL)),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='system.commitmentobjective')),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='system.leadershipcommitment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('identified_date', models.DateField(default=django.utils.timezone.now)),
                ('benefit', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('feasibility', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='open', help_text='e.g. open, implemented, closed', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('identified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='identified_opportunities', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualityPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='Quality Policy', max_length=255)),
                ('content', models.TextField(help_text='The actual text of the quality policy')),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_policies', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('developed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='developed_policies', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='QualityPolicyCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(help_text="e.g. 'Email', 'Training', 'Notice Board', 'Intranet'", max_length=150)),
                ('audience', models.TextField(blank=True, help_text='Who received the policy communication')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='qms/quality_policy/communications/%Y/%m/%d/')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='system.qualitypolicy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualityPolicyEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text="Description of the evidence, e.g. 'Photo of policy on notice board'", max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='qms/quality_policy/evidence/%Y/%m/%d/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='system.qualitypolicy')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('identified_date', models.DateField(default=django.utils.timezone.now)),
                ('likelihood', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('impact', models.PositiveSmallIntegerField(help_text='Scale 1 (Low) - 5 (High)')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='open', help_text='e.g. open, mitigated, closed', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('identified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='identified_risks', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskOpportunityResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_type', models.CharField(choices=[('mitigate', 'Mitigate'), ('accept', 'Accept'), ('transfer', 'Transfer'), ('avoid', 'Avoid'), ('exploit', 'Exploit'), ('enhance', 'Enhance'), ('share', 'Share')], max_length=50)),
                ('description', models.TextField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='open', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='system.opportunity')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risk_opportunity_responses', to=settings.AUTH_USER_MODEL)),
                ('risk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='system.risk')),
            ],
        ),
        migrations.CreateModel(
            name='AccountabilityAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, help_text="Role or responsibility title e.g. 'QMS Sponsor', 'Process Owner'", max_length=150)),
                ('responsibility_description', models.TextField(blank=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qms_accountabilities', to=settings.AUTH_USER_MODEL)),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accountabilities', to='system.leadershipcommitment')),
            ],
            options={
                'unique_together': {('commitment', 'user', 'role')},
            },
        ),
    ]
